@page
@model RazorPages.Pages.Admin.AdminManager.CustomerManager.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Customer</h1>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].AvatarUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].IsBanned)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Customers) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvatarUrl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsBanned)
            </td>
            <td>
                    @if (!item.IsBanned)
                    {
                        <a asp-page="./Edit" asp-route-id="@item.Id">Chặn</a>
                    }
                    else
                    {
                        <a asp-page="./Edit" asp-route-id="@item.Id">Bỏ Chặn</a>
                    }
                    |
                <a asp-page="./Details" asp-route-id="@item.Id">Chi tiết thông tin khách hàng.</a> 
                @*<a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>*@
            </td>
        </tr>
}
    </tbody>
</table>


@{
    var prevDisabled = !Model.Customers.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Customers.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Customers.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Customers.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>